version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: hom_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: hom_user
      POSTGRES_PASSWORD: hom_pass
      POSTGRES_DB: hom_db
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hom_user -d hom_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: hom_redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hom_backend
    restart: always
    env_file: .env.stage
    environment:
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: ["/entrypoint.sh"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: hom_frontend
    restart: always
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  pg-data:
  redis-data:
