name: Deploy MVP (Stage)

on:
  push:
    branches:
      - stage

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to remote server
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          DB_URL_STAGE: ${{ secrets.DB_URL_STAGE }}
          JWT_SECRET_STAGE: ${{ secrets.JWT_SECRET_STAGE }}
          CORS_ORIGINS_STAGE: ${{ secrets.CORS_ORIGINS_STAGE }}
          FRONTEND_API_URL: ${{ secrets.FRONTEND_API_URL }}
        run: |
          echo "ðŸš€ Starting deployment on $REMOTE_HOST"

          ssh -o StrictHostKeyChecking=no root@$REMOTE_HOST << 'EOF'

          cd ~/dev/hom_mvp || exit 1

          echo "ðŸ§© Creating environment files..."

          # ---------- FRONTEND ----------
          cat <<EENV > ./frontend/.env.stage
          VITE_API_URL=/api
          VITE_APP_ENV=stage
          EENV

          # ---------- BACKEND ----------
          cat <<EENV > ./backend/.env.stage
          APP_ENV=stage
          DB_URL=${DB_URL_STAGE}
          JWT_SECRET=${JWT_SECRET_STAGE}
          JWT_EXPIRE_MIN=60
          CORS_ORIGINS=http://164.90.194.158
          REDIS_URL=redis://redis:6379
          EENV

          echo "âœ… .env files created"

          # ---------- NGINX CONFIG ----------
          cat <<'EENV' > ./frontend/nginx.conf
          # ==============================
          # FRONTEND + BACKEND via /api
          # ==============================
          server {
              listen 80;
              server_name 164.90.194.158;

              # --- FRONTEND (SPA) ---
              root /usr/share/nginx/html;
              index index.html;

              # --- Static caching ---
              location ~* \.(?:css|js|woff2?|ttf|eot|png|jpg|jpeg|gif|svg)$ {
                  expires 7d;
                  access_log off;
              }

              # --- BACKEND proxy ---
              location /api/ {
                  proxy_pass http://hom_backend:8000/;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_redirect off;

                  # CORS support
                  add_header 'Access-Control-Allow-Origin' '*' always;
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;

                  if ($request_method = OPTIONS) {
                      add_header 'Access-Control-Max-Age' 1728000;
                      add_header 'Content-Type' 'text/plain charset=UTF-8';
                      add_header 'Content-Length' 0;
                      return 204;
                  }
              }

              # --- SPA fallback ---
              location / {
                  try_files $uri /index.html;
              }
          }
          EENV

          echo "ðŸ§± Updating containers..."
          docker compose down
          docker compose up -d --build

          echo "âœ… Deployment complete."
          EOF
