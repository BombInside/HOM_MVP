name: 🚀 CI/CD Deploy (Stage)

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository_owner }}/hom-backend
  IMAGE_FRONTEND: ghcr.io/${{ github.repository_owner }}/hom-frontend

jobs:
  build-lint-deploy:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout репо ---
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      # --- Установка Python (для линтеров) ---
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 🧹 Install linters
        run: pip install --upgrade pip && pip install ruff black mypy

      # --- Проверка качества кода ---
      - name: ✅ Run code checks
        run: |
          ruff check backend
          black --check backend
          mypy backend

      # --- Docker setup ---
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Сборка и пуш frontend ---
      - name: 🏗️ Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}

      # --- Сборка и пуш backend ---
      - name: 🏗️ Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}

      # --- Деплой на сервер (stage) ---
      - name: 🚀 Deploy to Stage Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -e
            echo "📦 Updating repo on remote..."
            if [ -d ~/app/.git ]; then
              cd ~/app && git fetch --all && git reset --hard origin/main
            else
              git clone https://github.com/${{ github.repository }} ~/app
              cd ~/app
            fi

            echo "🔑 Logging in to GHCR..."
            echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "🧩 Writing .env.stage..."
            cat > ~/app/.env.stage <<EOF
            APP_ENV=stage
            DB_URL=${{ secrets.DB_URL_STAGE }}
            JWT_SECRET=${{ secrets.JWT_SECRET_STAGE }}
            CORS_ORIGINS=${{ secrets.CORS_ORIGINS_STAGE }}
            REDIS_URL=redis://redis:6379
            EOF

            echo "🐳 Running Docker Compose..."
            docker compose -f docker-compose.prod.yml --env-file .env.stage pull
            docker compose -f docker-compose.prod.yml --env-file .env.stage up -d --remove-orphans

            echo "✅ Stage deploy completed!"
            docker ps
