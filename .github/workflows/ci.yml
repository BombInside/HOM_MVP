name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    
    # üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (Postgres –∏ Redis) –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: hom_user
          POSTGRES_PASSWORD: hom_pass
          POSTGRES_DB: hom_db
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ healthcheck –∏ –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–∞ (–¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏–º–µ–Ω —Ö–æ—Å—Ç–æ–≤ –≤ —Ç–µ—Å—Ç–∞—Ö)
        options: >-
          --health-cmd "pg_isready -U hom_user -d hom_db"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5
          --name hom_postgres
        ports:
          - 5432:5432
      redis:
        image: redis:7.2-alpine
        command: redis-server --appendonly yes
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 3s
          --health-timeout 3s
          --health-retries 5
          --name hom_redis
        ports:
          - 6379:6379

    defaults:
      run:
        working-directory: backend
        
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps & Test dependencies
        run: |
          python -m pip install --upgrade pip
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          pip install -r requirements.txt
          pip install ruff black mypy pytest pytest-asyncio httpx

      - name: üî¨ Ruff (Check Formatting & Linting)
        # ‚úÖ –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –∞–≤—Ç–æ-—Ñ–∏–∫—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ (—á–µ—Ä–µ–∑ pre-commit)
        run: ruff check .

      - name: üé® Black (Check Formatting)
        # ‚úÖ –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
        run: black . --check

      - name: üìù Mypy (Static Type Check)
        run: |
          mypy --ignore-missing-imports .
      
      - name: üöÄ Run Tests (Unit & Integration)
        # GitHub Actions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∂–¥–µ—Ç, –ø–æ–∫–∞ —Å–µ—Ä–≤–∏—Å—ã —Å—Ç–∞–Ω—É—Ç –∑–¥–æ—Ä–æ–≤—ã–º–∏ (health check)
        run: |
          pytest
        env:
          # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤, —á—Ç–æ–±—ã –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∏–º–µ–Ω–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (postgres, redis), 
          # –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–µ—Ç–∏ GitHub Actions
          DB_URL: postgresql+asyncpg://hom_user:hom_pass@postgres:5432/hom_db
          REDIS_URL: redis://redis:6379
          JWT_SECRET: test-secret-for-ci # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ–∫—Ä–µ—Ç


  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Build (sanity)
        # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –±–µ–∑ –æ—à–∏–±–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ docker-compose
        env:
          VITE_API_URL: http://localhost:8000
        run: npm run build