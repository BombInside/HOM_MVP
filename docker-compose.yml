services:
  # üí° –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–º–µ–Ω–∞ CockroachDB –Ω–∞ PostgreSQL
  postgres: # <-- –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–∞
    image: postgres:15-alpine
    # EN: Database settings defined in .env file
    # RU: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤ .env
    environment:
      POSTGRES_USER: hom_user
      POSTGRES_PASSWORD: hom_pass
      POSTGRES_DB: hom_db
    ports: ["5432:5432"] # <-- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç PG
    volumes: [ "pg-data:/var/lib/postgresql/data" ] # <-- –ù–æ–≤—ã–π —Ç–æ–º –¥–∞–Ω–Ω—ã—Ö
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hom_user -d hom_db"] # <-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ PG
      interval: 5s
      timeout: 3s
      retries: 5

  redis: 
    image: redis:7.2-alpine
    command: redis-server --appendonly yes
    ports: ["6379:6379"]
    volumes: ["redis-data:/data"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    depends_on:
      postgres: # <-- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=dev
      # üí° –ò–ó–ú–ï–ù–ï–ù–ò–ï: DB_URL —Ç–µ–ø–µ—Ä—å —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–∏—Å 'postgres'
      - DB_URL=postgresql+asyncpg://hom_user:hom_pass@postgres:5432/hom_db 
      - JWT_SECRET=dev-secret-change-me
      - JWT_EXPIRE_MIN=60
      - CORS_ORIGINS=http://localhost:5173
      - REDIS_URL=redis://redis:6379
    ports: ["8000:8000"]

  frontend:
    build: ./frontend
    depends_on: [ backend ]
    environment:
      - VITE_API_URL=http://localhost:8000
    ports: ["5173:5173"]

volumes:
  pg-data: # <-- –ù–û–í–´–ô –¢–û–ú
  redis-data: